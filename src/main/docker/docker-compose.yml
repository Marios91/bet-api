version: '2'
services:
      tomcat:
         image: 'tomcat:9.0.62'
         restart: on-failure:3
         ports:
             - '8082:8080'
         volumes:
             - '../../../target/betApi.war:/usr/local/tomcat/webapps/betApi.war'
         networks:
            - my-network    

      pgdb:
          image: 'postgres:13.1-alpine'
          mem_limit: 1536MB
          mem_reservation: 1G
          container_name: pgdb
          environment:
              - POSTGRES_USER=postgres
              - POSTGRES_PASSWORD=pgsqlP@ss123!
          ports:
              - "5432:5432"
          networks:
            - my-network

volumes:
    tomcat_data:
        driver: local
    
networks:
  my-network:
    driver: bridge    


#services:
#  demo-container-db:
#    image: postgres:14.1-alpine
#    mem_limit: 1536MB
#    mem_reservation: 1G
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: pgsqlP@ss123!
#    ports:
#    - "5432:5432"
#    networks:
#    - turreta_network
#    volumes:
#    - db-data:/var/lib/postgresql/data
#  web:
#    depends_on:
#      - demo-container-db
#    image: tomcat:9.0.62-jdk11-temurin
#    volumes:
#      - ./target/betApi.war:/usr/local/tomcat/webapps/betApi.war
#    ports:
#      - '8082:8080'
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: pgsqlP@ss123!
      
#networks:
#  turreta_network:
#    driver: bridge
 
#volumes:
#  db-data:

#  app:
#    image: 'docker-spring-boot-app:latest'
#    build:
#      context: .
#    container_name: app
#    depends_on:
#      - pgdb
#    environment:  
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/betdb
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=pgsqlP@ss123!
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update      